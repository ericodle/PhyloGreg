# Read the CSV file into a pandas DataFrame
inputFile = '/path/to/file.fasta'

import pandas as pd
import csv
import numpy as np

# Define the IUPAC codes for nucleotide ambiguity
NUCLEOTIDE_CODES = {
    "A": [1, 0, 0, 0],
    "C": [0, 1, 0, 0],
    "G": [0, 0, 1, 0],
    "T": [0, 0, 0, 1],
    "U": [0, 0, 0, 1],  # add U code for RNA
    "R": [0.5, 0, 0.5, 0],
    "Y": [0, 0.5, 0, 0.5],
    "S": [0, 0.5, 0.5, 0],
    "W": [0.5, 0, 0, 0.5],
    "K": [0, 0, 0.5, 0.5],
    "M": [0.5, 0.5, 0, 0],
    "B": [0, 1/3, 1/3, 1/3],
    "D": [1/3, 0, 1/3, 1/3],
    "H": [1/3, 1/3, 0, 1/3],
    "V": [1/3, 1/3, 1/3, 0],
    "N": [0.25, 0.25, 0.25, 0.25],
    "-": [0, 0, 0, 0]  # for gaps
}

import json

def tokenize_fasta(file_path):
    """
    Tokenizes a FASTA file and saves the result to a JSON file.

    Args:
    - file_path (str): The path to the FASTA file.

    Returns:
    - None
    """
    # Read the FASTA file
    with open(file_path) as f:
        lines = f.readlines()

    # Tokenize each sequence in the FASTA file
    tokens = []
    for i in range(len(lines)):
        if lines[i].startswith('>'):
            name = lines[i].strip()[1:] # extract the sequence name
            seq = ''
            for j in range(i+1, len(lines)):
                if lines[j].startswith('>'):
                    break
                seq += lines[j].strip()
            tokenized_seq = [NUCLEOTIDE_CODES[c] for c in seq]
            tokens.append({'id': name, 'sequence': tokenized_seq})

    # Save the tokenized sequences to a JSON file
    with open('sequences.json', 'w') as f:
        json.dump(tokens, f)

tokenize_fasta(inputFile)
